{"version":3,"file":"component---src-pages-about-tsx-1dc8e42f7be081d935fd.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/About/WorkProjectList.tsx","webpack://gatsby-starter-default/./src/components/About/EducationList.tsx","webpack://gatsby-starter-default/./src/components/About/SkillsList.tsx","webpack://gatsby-starter-default/./src/components/About/AboutContent.tsx","webpack://gatsby-starter-default/./src/pages/about.tsx"],"sourcesContent":["import React, { FC } from 'react'\nimport styled from '@emotion/styled'\nimport { WorkProjectType } from 'types/siteData.type'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\nimport { faFileLines } from '@fortawesome/free-solid-svg-icons'\n\ntype WorkProjectListProps = {\n  items: WorkProjectType[]\n}\n\nconst WorkProjectListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 50px auto 0;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    width: 100%;\n    // margin-top: 50px;\n    padding: 0 20px;\n  }\n`\n\nconst WorkProjectListHeader = styled.h2`\n  margin-bottom: 20px;\n`\n\nconst WorkProjectWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n`\n\nconst WorkProjectTitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  align-items: baseline;\n`\n\nconst WorkProjectTitle = styled.div`\n  font-weight: 600;\n  margin-bottom: 10px;\n`\n\nconst IconLink = styled.a``\n\nconst IconWrapper = styled(FontAwesomeIcon)`\n  width: 20px;\n  height: 20px;\n  color: var(--icon-color);\n\n  &:hover {\n    color: var(--icon-color-hover);\n  }\n`\n\nconst WorkProjectContentWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst WorkProjectLeftWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  gap: 5px;\n`\n\nconst CompanyLink = styled.a`\n  // underline animation\n  position: relative;\n  text-decoration: none;\n  width: fit-content;\n  border-bottom: 1px solid var(--underline-color);\n\n  &:hover {\n    border-bottom: 2px solid var(--underline-color);\n  }\n`\n\nconst WorkProjectRightWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 2;\n`\n\nconst StacksWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 7px;\n`\n\nconst StackTag = styled.div`\n  background-color: var(--shadow-color);\n  font-size: 15px;\n  font-weight: 500;\n  // margin-right: 5px;\n  padding: 5px 7px;\n  border-radius: 10px;\n  min-width: max-content;\n`\n\nconst ContributionList = styled.ul`\n  // list-style-position: inside;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`\n\nconst ContributionText = styled.li`\n  word-break: keep-all;\n  list-style-position: outside; /* or omit this line, as it's the default value */\n  &::marker {\n    margin-left: -20px; /* adjust the margin value as needed */\n  }\n`\n\nconst WorkProjectList: FC<WorkProjectListProps> = ({\n  items,\n}: WorkProjectListProps) => {\n  const filteredItems = items.slice(1)\n  return (\n    <WorkProjectListWrapper>\n      <WorkProjectListHeader>\n        {items[0].company === undefined ? 'Projects' : 'Work Experiences'}\n      </WorkProjectListHeader>\n      {filteredItems.map((item, i) => {\n        const {\n          position,\n          company,\n          date,\n          title,\n          description,\n          role,\n          stacks,\n          contributions,\n          links: { github, googlePlay, appStore, demo, companyLink },\n        } = item\n\n        return (\n          <WorkProjectWrapper key={i}>\n            <WorkProjectTitleWrapper>\n              <WorkProjectTitle>\n                {position === undefined ? title : position}\n              </WorkProjectTitle>\n\n              {demo && (\n                <IconLink href={demo} target=\"_blank\">\n                  <IconWrapper icon={faFileLines} />\n                </IconLink>\n              )}\n\n              {github && (\n                <IconLink href={github} target=\"_blank\">\n                  <IconWrapper icon={faGithub} />\n                </IconLink>\n              )}\n            </WorkProjectTitleWrapper>\n\n            <WorkProjectContentWrapper>\n              <WorkProjectLeftWrapper>\n                <div>\n                  {company === undefined ? (\n                    description\n                  ) : companyLink ? (\n                    <CompanyLink href={companyLink} target=\"_blank\">\n                      {company}\n                    </CompanyLink>\n                  ) : (\n                    company\n                  )}\n                </div>\n\n                <div>{date === undefined ? role?.join(', ') : date}</div>\n\n                <StacksWrapper>\n                  {stacks.map((stack, i) => (\n                    <StackTag key={i}>{stack}</StackTag>\n                  ))}\n                </StacksWrapper>\n              </WorkProjectLeftWrapper>\n\n              <WorkProjectRightWrapper>\n                <ContributionList>\n                  {contributions.map((contribution, i) => (\n                    <ContributionText key={i}>{contribution}</ContributionText>\n                  ))}\n                </ContributionList>\n              </WorkProjectRightWrapper>\n            </WorkProjectContentWrapper>\n          </WorkProjectWrapper>\n        )\n      })}\n    </WorkProjectListWrapper>\n  )\n}\n\nexport default WorkProjectList\n","import React, { FC } from 'react'\nimport styled from '@emotion/styled'\nimport { educationType } from 'types/siteData.type'\n\ntype EducationListProps = {\n  items: educationType[]\n}\n\nconst EducationListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 50px auto 0;\n`\n\nconst EducationListHeader = styled.h2`\n  margin-bottom: 20px;\n`\n\nconst EducationContentList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`\n\nconst EducationContent = styled.div`\n  display: flex;\n  flex-direction: row;\n`\n\nconst EducationContentLeft = styled.div`\n  display: flex;\n  flex: 1;\n`\n\nconst EducationContentRight = styled.div`\n  // display: flex;\n  flex: 2;\n  // list-style-position: inside;\n`\n\nconst EducationList: FC<EducationListProps> = ({\n  items,\n}: EducationListProps) => {\n  return (\n    <EducationListWrapper>\n      <EducationListHeader>Education</EducationListHeader>\n      <EducationContentList>\n        {items.map((education, i) => {\n          const { dates, description } = education\n          return (\n            <EducationContent key={i}>\n              <EducationContentLeft>{dates}</EducationContentLeft>\n              <EducationContentRight>- {description}</EducationContentRight>\n            </EducationContent>\n          )\n        })}\n      </EducationContentList>\n    </EducationListWrapper>\n  )\n}\n\nexport default EducationList\n","import React, { FC } from 'react'\nimport styled from '@emotion/styled'\nimport { skillType } from 'types/siteData.type'\n\ntype SkillsListProps = {\n  items: skillType\n}\n\ntype SkillsProps = {\n  name: string\n  skill: string[]\n}\n\nconst SkillsListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 50px auto 0;\n`\n\nconst SkillsListHeader = styled.h2`\n  margin-bottom: 20px;\n`\n\nconst SkillsContentList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`\n\nconst SkillTitle = styled.div`\n  font-weight: 600;\n`\n\nconst SkillWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: baseline;\n`\n\nconst SkillList = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 5px;\n  margin-bottom: 5px;\n  margin-left: 10px;\n`\n\nconst SkillTag = styled.div`\n  background-color: var(--shadow-color);\n  font-size: 15px;\n  font-weight: 500;\n  padding: 5px 7px;\n  border-radius: 10px;\n  min-width: max-content;\n`\n\nconst Skill: FC<SkillsProps> = ({ name, skill }: SkillsProps) => {\n  console.log('skill:', skill)\n  return (\n    <SkillWrapper>\n      <SkillTitle>{name}:</SkillTitle>\n      <SkillList>\n        {skill.map(item => (\n          <SkillTag key={item}>{item}</SkillTag>\n        ))}\n      </SkillList>\n    </SkillWrapper>\n  )\n}\n\nconst SkillsList: FC<SkillsListProps> = ({ items }: SkillsListProps) => {\n  const { lang, programmingLang, frontend, backend, tools } = items\n  return (\n    <SkillsListWrapper>\n      <SkillsListHeader>Skills</SkillsListHeader>\n      <SkillsContentList>\n        <Skill key=\"Language\" name=\"Language\" skill={lang} />\n        <Skill\n          key=\"programmingLang\"\n          name=\"Programming Language\"\n          skill={programmingLang}\n        />\n        <Skill key=\"Frontend\" name=\"Frontend\" skill={frontend} />\n        <Skill key=\"Backend\" name=\"Backend\" skill={backend} />\n        <Skill key=\"Tools\" name=\"Tools\" skill={tools} />\n      </SkillsContentList>\n    </SkillsListWrapper>\n  )\n}\nSkillsList\nexport default SkillsList\n","import React, { FC } from 'react'\nimport styled from '@emotion/styled'\nimport WorkProjectList from './WorkProjectList'\nimport EducationList from './EducationList'\nimport SkillsList from './SkillsList'\nimport { aboutType } from 'types/siteData.type'\n\ntype AboutContentProps = aboutType\n\nconst AboutContentWrapper = styled.div`\n  // Renderer Style\n  display: flex;\n  flex-direction: column;\n  width: 768px;\n  margin: 0 auto;\n  color: var(--text-color);\n\n  @media (max-width: 768px) {\n    width: 100%;\n    padding: 0 25px;\n    line-height: 1.6;\n    font-size: 14px;\n  }\n`\n\nconst AboutBioWrapper = styled.div``\n\nconst AboutContent: FC<AboutContentProps> = ({\n  about: { bio, experiences, projects, education, skills },\n}: AboutContentProps) => {\n  return (\n    <AboutContentWrapper>\n      <AboutBioWrapper>{bio}</AboutBioWrapper>\n      <WorkProjectList items={experiences} />\n      <WorkProjectList items={projects} />\n      <EducationList items={education} />\n      <SkillsList items={skills} />\n    </AboutContentWrapper>\n  )\n}\n\nexport default AboutContent\n","import React, { FC } from 'react'\nimport { graphql } from 'gatsby'\nimport { IGatsbyImageData } from 'gatsby-plugin-image'\nimport { aboutType, siteMetadataType } from 'types/siteData.type'\nimport Template from 'components/Common/Template'\nimport Introduction from 'components/Main/Introduction'\nimport AboutContent from 'components/About/AboutContent'\n\ntype AboutPageProps = {\n  data: {\n    site: {\n      siteMetadata: siteMetadataType & aboutType\n    }\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData\n      }\n      publicURL: string\n    }\n  }\n}\n\nconst About: FC<AboutPageProps> = ({\n  data: {\n    site: {\n      siteMetadata: {\n        siteTitle,\n        description,\n        siteUrl,\n        menuLinks,\n        author,\n        about,\n      },\n    },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) => {\n  return (\n    <Template\n      siteTitle={siteTitle}\n      title={siteTitle}\n      description={description}\n      author={author}\n      siteUrl={siteUrl}\n      image={publicURL}\n      menuLinks={menuLinks}\n    >\n      <Introduction profileImage={gatsbyImageData} author={author} />\n      <AboutContent about={about} />\n    </Template>\n  )\n}\n\nexport default About\n\nexport const getAboutPage = graphql`\n  query getAboutPageQuery {\n    site {\n      siteMetadata {\n        siteTitle\n        description\n        author {\n          name\n          social {\n            email\n            github\n            linkedIn\n          }\n        }\n        siteUrl\n        menuLinks {\n          name\n          link\n        }\n        about {\n          bio\n          experiences {\n            position\n            company\n            date\n            stacks\n            contributions\n            links {\n              github\n              googlePlay\n              appStore\n              demo\n              companyLink\n            }\n          }\n          projects {\n            title\n            description\n            role\n            contributions\n            stacks\n            links {\n              github\n              googlePlay\n              appStore\n              demo\n            }\n          }\n          education {\n            dates\n            description\n          }\n          skills {\n            lang\n            programmingLang\n            frontend\n            backend\n            tools\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`\n"],"names":["WorkProjectListWrapper","WorkProjectListHeader","WorkProjectWrapper","WorkProjectTitleWrapper","WorkProjectTitle","IconLink","IconWrapper","_styled","FontAwesomeIcon","WorkProjectContentWrapper","WorkProjectLeftWrapper","CompanyLink","WorkProjectRightWrapper","StacksWrapper","StackTag","ContributionList","ContributionText","_ref","items","filteredItems","slice","___EmotionJSX","undefined","company","map","item","i","position","date","title","description","role","stacks","contributions","links","github","googlePlay","appStore","demo","companyLink","key","href","target","icon","faFileLines","faGithub","join","stack","contribution","EducationListWrapper","EducationListHeader","EducationContentList","EducationContent","EducationContentLeft","EducationContentRight","education","dates","SkillsListWrapper","SkillsListHeader","SkillsContentList","SkillTitle","SkillWrapper","SkillList","SkillTag","Skill","name","skill","console","log","SkillsList","_ref2","lang","programmingLang","frontend","backend","tools","AboutContentWrapper","AboutBioWrapper","about","bio","experiences","projects","skills","WorkProjectList","EducationList","data","site","siteMetadata","siteTitle","siteUrl","menuLinks","author","file","childImageSharp","gatsbyImageData","publicURL","Template","image","Introduction","profileImage","AboutContent"],"sourceRoot":""}